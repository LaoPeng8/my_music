<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.pjj.music.dao.SongMapper">

    <resultMap id="BaseResultMap" type="org.pjj.music.domain.Song">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="singer_id" jdbcType="INTEGER" property="singerId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="introduction" jdbcType="VARCHAR" property="introduction" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="pic" jdbcType="VARCHAR" property="pic" />
        <result column="url" jdbcType="VARCHAR" property="url" />
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="org.pjj.music.domain.Song" extends="BaseResultMap">
        <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
    </resultMap>

    <sql id="Base_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,url
    </sql>
    <sql id="Blob_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,lyric,url
    </sql>

    <insert id="insert" parameterType="org.pjj.music.domain.Song">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="singerId != null and singerId != ''">
                singer_id,
            </if>
            <if test="name != null and name != ''">
                name,
            </if>
            <if test="introduction != null and introduction != ''">
                introduction,
            </if>
            create_time, update_time,
            <if test="pic != null and pic != ''">
                pic,
            </if>
            <if test="lyric != null and lyric != ''">
                lyric,
            </if>
            <if test="url != null and url != ''">
                url,
            </if>
        </trim>
        <trim prefix=" values(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id},
            </if>
            <if test="singerId != null and singerId != ''">
                #{singerId},
            </if>
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="introduction != null and introduction != ''">
                #{introduction},
            </if>
            now(),now(),
            <if test="pic != null and pic != ''">
                #{pic},
            </if>
            <if test="lyric != null and lyric != ''">
                #{lyric},
            </if>
            <if test="url != null and url != ''">
                #{url},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="org.pjj.music.domain.Song">
        update song
        <set>
            <if test="singerId != null and singerId != ''">
                singer_id = #{singerId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="introduction != null and introduction != ''">
                introduction = #{introduction},
            </if>
            update_time = now(),
            <if test="pic != null and pic != ''">
                pic = #{pic},
            </if>
            <if test="lyric != null and lyric != ''">
                lyric = #{lyric},
            </if>
            <if test="url != null and url != ''">
                url = #{url},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from song where id = #{id}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List" />
        from song
        where id = #{id}
    </select>

    <select id="allSong" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List" />
        from song
    </select>

    <select id="songOfName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List" />
        from song
        where name = #{name}
    </select><!-- #{name} 模糊查询在这里没有加 %  由前端传值的时候直接加上 -->

    <select id="likeSongOfName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List" />
        from song
        where name like #{name}
    </select><!-- #{name} 模糊查询在这里没有加 %  由前端传值的时候直接加上 -->

    <select id="songOfSingerId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List" />
        from song
        where singer_id = #{singerId}
    </select>

    <select id="songOfSingerNameAndSongName" resultType="java.lang.Integer">
        select s.id from song s
        inner join singer sr on s.singer_id = sr.id
        where s.name = #{songName} and sr.name = #{singerName};
    </select>

    <select id="songCount" resultType="java.lang.Integer">
        select count(*) from song;
    </select>


</mapper>